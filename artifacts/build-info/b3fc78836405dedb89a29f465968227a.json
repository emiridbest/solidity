{
	"id": "b3fc78836405dedb89a29f465968227a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"storage Factory.sol": {
				"content": "// SPDX-License_Identifier: MIT\r\n\r\n\r\ncontract StorageFactory{\r\n    \r\n} "
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"storage Factory.sol": {
				"StorageFactory": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"storage Factory.sol\":37:70  contract StorageFactory{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"storage Factory.sol\":37:70  contract StorageFactory{\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220349fe0bd4a8179c715a11456f7061a6e97415f40ed34d9b785f2c3d32992b53664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220349fe0bd4a8179c715a11456f7061a6e97415f40ed34d9b785f2c3d32992b53664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE SWAP16 0xE0 0xBD 0x4A DUP2 PUSH26 0xC715A11456F7061A6E97415F40ED34D9B785F2C3D32992B53664 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "37:33:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220349fe0bd4a8179c715a11456f7061a6e97415f40ed34d9b785f2c3d32992b53664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE SWAP16 0xE0 0xBD 0x4A DUP2 PUSH26 0xC715A11456F7061A6E97415F40ED34D9B785F2C3D32992B53664 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "37:33:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 37,
									"end": 70,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 37,
									"end": 70,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 37,
									"end": 70,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37,
									"end": 70,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 37,
									"end": 70,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 37,
									"end": 70,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 37,
									"end": 70,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 37,
									"end": 70,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 37,
									"end": 70,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 37,
									"end": 70,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 37,
									"end": 70,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 37,
									"end": 70,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 37,
									"end": 70,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 37,
									"end": 70,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37,
									"end": 70,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 37,
									"end": 70,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 37,
									"end": 70,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 37,
									"end": 70,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 37,
									"end": 70,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 37,
									"end": 70,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 37,
									"end": 70,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220349fe0bd4a8179c715a11456f7061a6e97415f40ed34d9b785f2c3d32992b53664736f6c63430008070033",
									".code": [
										{
											"begin": 37,
											"end": 70,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 37,
											"end": 70,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37,
											"end": 70,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37,
											"end": 70,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37,
											"end": 70,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37,
											"end": 70,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"storage Factory.sol\":\"StorageFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"storage Factory.sol\":{\"keccak256\":\"0x25ac63ea1af45ec00d041a5b1b8b7e607e01e4589f23f342765b7179908dff08\",\"urls\":[\"bzz-raw://2f7821863b9d571a08fb619f4a9b0ddca8a8504a2699e8390dd7fb12cb9efbfe\",\"dweb:/ipfs/QmWxg2FDX9ibAL2rxYaKgo7bgDgeabKT7yhcd2rrm2Bn94\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> storage Factory.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "storage Factory.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.7;\"\n--> storage Factory.sol\n\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.7;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "storage Factory.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"storage Factory.sol": {
				"ast": {
					"absolutePath": "storage Factory.sol",
					"exportedSymbols": {
						"StorageFactory": [
							1
						]
					},
					"id": 2,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1,
							"linearizedBaseContracts": [
								1
							],
							"name": "StorageFactory",
							"nameLocation": "46:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 2,
							"src": "37:33:0",
							"usedErrors": []
						}
					],
					"src": "37:34:0"
				},
				"id": 0
			}
		}
	}
}